@page "/dashboard"
@using TechNationFinanceiroClient.Models
@inject INotaFiscalService NotaFiscalService
@inject IJSRuntime JSRuntime
@using System.Globalization
@using TechNationFinanceiroClient.Services.Interfaces


<PageTitle>Dashboard</PageTitle>
    <div class="main-content">
        <div class="page-content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-12">
                        <div class="page-title-box d-flex align-items-center justify-content-between">
                            <h4 class="mb-0 font-size-18">Dashboard</h4>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-6 col-xl-3">
                        <div class="card">
                            <div class="card-body">
                                <div class="mb-4">
                                    <h5 class="card-title mb-0">Valor Total das Notas Emitidas</h5>
                                </div>
                                <div class="row d-flex align-items-center mb-4">
                                    <div class="col-8">
                                        <h2 class="d-flex align-items-center mb-0">
                                        R$@totalnotesissued
                                        </h2>
                                    </div>
                                </div>
                                <div class="progress shadow-sm" style="height: 5px;">
                                    <div class="progress-bar bg-success" role="progressbar" style="width: 100%;">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div
                    <div class="col-md-6 col-xl-4">
                        <div class="card">
                            <div class="card-body">
                                <div class="mb-4">
                                    <h5 class="card-title mb-0">Valor total das notas emitidas (Sem cobrança)</h5>
                                </div>
                                <div class="row d-flex align-items-center mb-4">
                                    <div class="col-8">
                                        <h2 class="d-flex align-items-center mb-0">
                                        R$@totalnotesissuedfreecharge
                                        </h2>
                                    </div>
                                </div>

                                <div class="progress shadow-sm" style="height: 5px;">
                                    <div class="progress-bar bg-info" role="progressbar" style="width: 100%;">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-xl-3">
                        <div class="card">
                            <div class="card-body">
                                <div class="mb-4">
                                    <h5 class="card-title mb-0">Valor total das notas a vencer</h5>
                                </div>
                                <div class="row d-flex align-items-center mb-4">
                                    <div class="col-8">
                                        <h2 class="d-flex align-items-center mb-0">
                                        R$@totalnotesissuedue
                                        </h2>
                                    </div>
                                </div>

                                <div class="progress shadow-sm" style="height: 5px;">
                                    <div class="progress-bar bg-primary" role="progressbar" style="width: 100%;"></div>
                                </div>
                            </div>

                        </div>
                    <br />
                    </div>
                    <div class="col-md-12 col-xl-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="mb-4">
                                    <h5 class="card-title mb-0">Valor total de todas as notas</h5>
                                </div>
                                <div class="row d-flex align-items-center mb-4">
                                    <div class="col-8">
                                        <h2 class="d-flex align-items-center mb-0">
                                        R$@totalvaluenotes
                                        </h2>
                                    </div>
                                </div>

                                <div class="progress shadow-sm" style="height: 5px;">
                                    <div class="progress-bar bg-danger" role="progressbar" style="width: 100%;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    </div>
                <br />
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                    <div>
                                        <div class="card">
                                            <div class="card-body">
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <h4 class="card-title">Gráfico de evolução da receita recebida mês a mês</h4>
                                                        <RadzenChart>
                                                            <RadzenLineSeries Smooth="@smooth" Data="@recipepermouth" CategoryProperty="Date" Title="Receita Recebida" ValueProperty="Valor">
                                                                <RadzenSeriesDataLabels Visible="@showDataLabels" />
                                                            </RadzenLineSeries>
                                                            <RadzenCategoryAxis Padding="20" />
                                                            <RadzenValueAxis Formatter="@FormatAsBRL">
                                                                <RadzenGridLines Visible="true" />
                                                                <RadzenAxisTitle Text="Valor da Receita Recebida em Reais" />
                                                            </RadzenValueAxis>
                                                        </RadzenChart>
                                                    </div>
                                                </div>
                                                <br />
                                                <div class="col-lg-3 border border-success">
                                                    <div class="card">
                                                        <div class="card-body">
                                                            <div class="row align-items-center">
                                                                <div class="col">
                                                                    <h4 class="card-title">Total receita recebida</h4>
                                                                    <h3>R$@totalrecipevalue</h3>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>          
                                        </div>
                                    </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div>
                                    <h4 class="card-title">Gráfico de evolução da inadimplência mês a mês</h4>
                                    <div class="col-lg-12">
                                        <RadzenChart>
                                            <RadzenAreaSeries Smooth="@smooth" Data="@inadimppermouth" CategoryProperty="Date" Title="Inadimplência" ValueProperty="Valor">
                                                <RadzenSeriesDataLabels Visible="@showDataLabels" />
                                            </RadzenAreaSeries>

                                            <RadzenCategoryAxis Padding="20" />
                                            <RadzenValueAxis Formatter="@FormatAsBRL">
                                                <RadzenGridLines Visible="true" />
                                                <RadzenAxisTitle Text="Valor da Inadimplência em Reais" />
                                            </RadzenValueAxis>
                                        </RadzenChart>
                                    </div>
                                </div>
                            
                            </div>
                            <br />
                            <div class="col-lg-3 border border-danger">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="row align-items-center">
                                            <div class="col">
                                                <h4 class="card-title">Total de Inadimplência</h4>
                                                <h3>R$@totalinadimpvalue</h3>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                             </div>
                           </div>
                        </div>
                    </div>   
                </div>
            </div>
        </div>
    </div>

   



@code {
    bool smooth = true;
    bool showDataLabels = false;
    decimal totalnotesissued;
    decimal totalinadimpvalue;
    decimal totalvaluenotes;
    decimal totalrecipevalue;
    decimal totalnotesissuedfreecharge;
    decimal totalnotesissuedue;


    List<DataItem> inadimppermouth = new List<DataItem>(); // Será preenchido dinamicamente
    List<DataItem> recipepermouth = new List<DataItem>(); // Será preenchido dinamicamente

    NotaFiscal[] notasFiscais; // Definir como membro da classe

    protected override async Task OnInitializedAsync()
    {
        // Chame seu serviço para obter dados de notas fiscais
        notasFiscais = (await NotaFiscalService.GetNotasFiscais()).ToArray();

        // Pega valor de todas as notas
        TotalValueNotes();

        // Inicializar a lista de inadimplência por mês
        InitializeInadimplencePerMonth();

        // Inicializar a lista de receita por mês
        InitializeRecipePerMonth();

        // Pegar valor total das notas emitidas mas também as que foram feitas cobrança
        TotalValueNotesIssued();

        // Pegar valor total apenas das emitidas sem cobrança
        TotalValueNotesIssuedfreeofcharge();

        // Pegar valor total apenas das notas emitidas que a cobrança ja foi realizada
        TotalValueNoteIssueDue();

        // Pegar valor total das notas com inadimplecia
        TotalValueNotesInadimp();

        // Pegar valor total das notas com receita
        TotalValueNotesRecipe();


    }

    void InitializeInadimplencePerMonth()
    {
        // Agrupar notas fiscais com status "Pagamento em Atraso" por mês e somar a inadimplência
        inadimppermouth = notasFiscais
            .Where(nota => nota.Status == "Pagamento em Atraso" && nota.DataCobranca.HasValue) // Considerar apenas notas com status adequado e data de cobrança
            .GroupBy(nota => new { Month = nota.DataCobranca.Value.Month, Year = nota.DataCobranca.Value.Year })
            .OrderBy(group => group.Key.Year)
            .ThenBy(group => group.Key.Month)
            .Select(group => new DataItem
                {
                    Date = $"{CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(group.Key.Month)} {group.Key.Year}",
                    Valor = (double)group.Sum(nota => nota.Valor ?? 0)
                })
            .ToList();
    }

    void InitializeRecipePerMonth()
    {
        // Agrupar notas fiscais com status "Pagamento Realizado" por mês e somar a receita recebida
        recipepermouth = notasFiscais
            .Where(nota => nota.Status == "Pagamento Realizado" && nota.DataPagamento.HasValue) // Considerar apenas notas com status adequado e data de pagamento
            .GroupBy(nota => new { Month = nota.DataPagamento.Value.Month, Year = nota.DataPagamento.Value.Year })
            .OrderBy(group => group.Key.Year)
            .ThenBy(group => group.Key.Month)
            .Select(group => new DataItem
                {
                    Date = $"{CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(group.Key.Month)} {group.Key.Year}",
                    Valor = (double)group.Sum(nota => nota.Valor ?? 0)
                })
            .ToList();
    }

    void TotalValueNotes()
    {
        totalvaluenotes = notasFiscais
       .Sum(nota => (decimal)nota.Valor);
    }

    void TotalValueNotesIssued()
    {
        totalnotesissued = notasFiscais
            .Where(nota => nota.Status == "Emitida" || nota.Status == "Cobrança Realizada") // Considerar notas com status "Emitida" ou "Cobrança Realizada"
            .Sum(nota => (decimal)(nota.Valor ?? 0));
    }

    void TotalValueNotesIssuedfreeofcharge()
    {
        totalnotesissuedfreecharge = notasFiscais
       .Where(nota => nota.Status == "Emitida") // Considerar apenas notas com status apenas de "Emitida"
       .Sum(nota => (decimal)nota.Valor);
    }

    void TotalValueNoteIssueDue()
    {
        totalnotesissuedue = notasFiscais
       .Where(nota => nota.Status == "Cobrança Realizada") // Considerar apenas notas com status apenas "Cobrança Realizada"
       .Sum(nota => (decimal)nota.Valor);
    }

    void TotalValueNotesInadimp()
    {
        totalinadimpvalue = notasFiscais
       .Where(nota => nota.Status == "Pagamento em Atraso") // Considerar apenas notas com status "Pagamento em Atraso"
       .Sum(nota => (decimal)nota.Valor);
    }

    void TotalValueNotesRecipe()
    {
        totalrecipevalue = notasFiscais
       .Where(nota => nota.Status == "Pagamento Realizado") // Considerar apenas notas com status "Pagamento Realizado"
       .Sum(nota => (decimal)nota.Valor);
    }

    string FormatAsBRL(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("pt-BR"));

    }

    // Definição da classe DataItem diretamente usando os dados da NotaFiscal
    public class DataItem
    {
        public string Date { get; set; }
        public double Valor { get; set; }
    }
}

