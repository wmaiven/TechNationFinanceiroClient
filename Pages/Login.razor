@page "/"
@using TechNationFinanceiroClient.Models
@using TechNationFinanceiroClient.Services.Interfaces
@inject NavigationManager Navigation
@inject IAuthenticationService AuthenticationService
@inject IJSRuntime JS

<div class="container-fluid d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="card" style="width: 550px;">
        <div class="card-body">
            <h3 class="card-title text-center mb-4">Login</h3>

            <div class="form-group">
                <label for="username">Usuário:</label>
                <input id="username" type="text" class="form-control" @bind="Username" />
            </div>

            <div class="form-group" style="margin-top: 10px;">
                <label for="password">Senha:</label>
                <input id="password" type="password" class="form-control" @bind="Password" />
            </div>

            <button type="button" class="btn btn-outline-primary" style="margin-top: 10px;" @onclick="DoLogin">Entrar</button>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger mt-3">@ErrorMessage</div>
            }
        </div>
    </div>
</div>

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        bool isAuthenticated = await AuthenticationService.IsAuthenticated();
        if (isAuthenticated)
        {
            Navigation.NavigateTo("/dashboard");
        }
    }

    private async Task DoLogin()
    {
        try
        {
            ErrorMessage = null;
            var user = new User { Username = Username, Password = Password };
            var token = await AuthenticationService.GetTokenAsync(user);

            if (!string.IsNullOrEmpty(token))
            {
                Navigation.NavigateTo("/dashboard", true);
            }
            else
            {
                Navigation.NavigateTo("/");
            }
        }
        catch (HttpRequestException ex)
        {
            if (ex.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                ErrorMessage = "Usuário ou senha inválidos. Por favor, tente novamente.";
            }
            else
            {
                ErrorMessage = "Ocorreu um erro ao tentar fazer login. Por favor, tente novamente.";
            }
        }
    }
}
