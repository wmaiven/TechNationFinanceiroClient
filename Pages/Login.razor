@page "/login"
@using TechNationFinanceiroClient.Models
@using TechNationFinanceiroClient.Services.Interfaces
@inject NavigationManager Navigation
@inject IAuthenticationService AuthenticationService
@inject IJSRuntime JS

<h3>Login</h3>

<div class="form-group">
    <label for="username">Usuário:</label>
    <input id="username" type="text" class="form-control" @bind="Username" />
</div>

<div class="form-group">
    <label for="password">Senha:</label>
    <input id="password" type="password" class="form-control" @bind="Password" />
</div>

<button type="button" class="btn btn-primary" @onclick="DoLogin">Entrar</button>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger mt-3">@ErrorMessage</div>
}

@code {
    private string Username { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }

    private async Task DoLogin()
    {
        try
        {
            ErrorMessage = null;
            var user = new User { Username = Username, Password = Password };
            var token = await AuthenticationService.GetTokenAsync(user);

            await JS.InvokeVoidAsync("localStorage.setItem", "authToken", token);

            Navigation.NavigateTo("/dashboard");
        }
        catch (HttpRequestException ex)
        {
            if (ex.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                ErrorMessage = "Usuário ou senha inválidos. Por favor, tente novamente.";
            }
            else
            {
                ErrorMessage = "Ocorreu um erro ao tentar fazer login. Por favor, tente novamente.";
            }
        }
    }
}
